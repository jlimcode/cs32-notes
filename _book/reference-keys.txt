introduction
week-1-wednesday-pre-lecture
why-we-dont-write-public-data-members
const-member-functions
alternate-constructor-stucture
order-of-construction
separate-compilation
header-file-include-practices
week-1-wednesday-lecture
constants-pointers-and-constant-pointers
default-constructors
new-and-variable-lifecycle
week-2-monday-lecture
separate-compilation-issues
example-project
include-guard-rules
pointer-example
incomplete-type-declaration
resource-management
week-2-monday-qa
destructor-cycle
week-2-wednesday-lecture
copying
assignment
aliasing
week-2-wednesday-qa
week-3-monday-lecture
introduction-to-linked-lists
first-link-list-implementation
linked-list-iteration
finding-a-specific-value
getting-rid-of-a-node
week-3-wednesday-lecture
stacks-in-c
queues-in-c
motivating-example-for-stacks
implementing-stacks-with-arrayslists
week-4-monday-lecture
implementing-queue-with-an-array
polymorphism
implementation-of-polymorphism
static-and-dynamic-binding
week-4-wednesday
dynamic-lookup
abstract-classes
multiple-inheritance
week-5-monday-lecture
motivating-recursion
introduction-to-recursion
implementing-the-merge-sort
week-5-wednesday-lecture
pointers-and-arrays
infinite-recursion
types-of-recursive-problems
common-mistakes-in-recursion
templates
week-6-monday-lecture
more-issues-with-templates
template-classes
stl
vector
linked-lists
week-6-wednesday-stl-and-algorithms
standard-algorithms
algorithm-analysis
week-7-monday-lecture
applications-of-algorithm-analysis-sorting
week-7-wednesday-sorting-trees
improving-quicksort
trees
week-8-monday-trees
week-8-wednesday-hash-tables
week-9-monday-lecture-more-hashtables
more-stl-data-structures
week-9-wednesday-lecture-heaps
